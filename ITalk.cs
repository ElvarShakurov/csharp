// namespace project;
// using System; //system подкл, т.к. ниже мы использовали console
// using System.Collections; //подключили это простр имён , т.к. используем коллекцию

// // ну и создаём интерфейс, пишем interface ,а потом название(обычно как и название файла)
// interface ITalk {

//     // string language; // вот так будет выдавать ошибку, перед string нужно прописать либо constant либо static 
//     // либо в фиг скобках аксессор{get;set;} но после гет и сет ничего  не писать, т.к. как и в абстр классах мы прописываем только шаблоны
//     // а сами объекты и знач пропис в других классах

//     const string language = "RU";
//     static int talkSpeed = 1;
//     // ну и создаём аксессор чтобы видеть всё что мы написали:
//     List <string> Words {get; set;} //возможно сюда будем помещать все сказанные слова // изменили с массива на коллекцию
//     // модификаторы доступа тут у всех полей будут public по умолчанию, поэтому их писать не обязательно
    
//     // создаём метод:
//     void Talk(string word) => System.Console.WriteLine(word); //cw тут был необязателен, но если подключаем console нужно выше подключ простр имён
//     //метод нужен для вывода инф и возможно добавления слова в аксессор Words(выше)
//     // ЕЩЕ если мы указываем минимальное действие для этого метода (cw), то если мы нереализуем этот метод ошибки не будет
//     // а ниже метод если не реализуем будет выдаваться ошибка, т.к. там мы не указыв миним действий каких либо
//     // ,т.е. если мы будем реализ интерфейс ITalk в каких то классах и не реализуем метод ниже, то будет ошибка

//     // создаём еще один метод:
//     string AllWords(); //он не будет ничего принимать, будет только перебирать Words и выводить его на экран(вернее возвращать в виде строки)

// }






// // Интерфейсы IEnumerable и IEnumerator
// namespace project;
// using System; 
// using System.Collections; 


// interface ITalk {


//     const string language = "RU";
//     static int talkSpeed = 1;
//     List <string> Words {get; set;} 
    
//     void Talk(string word) => System.Console.WriteLine(word); 

//     string AllWords(); 

// }